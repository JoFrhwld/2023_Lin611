---
title: "Github Onboarding with RStudio"
author: "Josef Fruehwald"
date: 2023-01-12
knitr: 
  opts_chunk: 
    message: false
categories:
  - "Onboarding"
order: 02  
# citation:
#   url: "https://jofrhwld.github.io/blog/posts/2022/12/github_onboarding.html"
---

Instruction boxes with {{< fa brands github >}} should be done on github, and instruction boxes with {{< fa brands r-project >}} should be done in RStudio.

## Step 1: Create a Github Account

Go over to Github and create a free account.

::: {.callout-tip appearance="simple" icon="false"}
## {{< fa brands github >}}

Go To

:   <https://github.com/>
:::

As suggested in [Happy Git Chapter 4](https://happygitwithr.com/github-acct.html), it would make sense to register an account username that aligns with your professional identity.

After you've created your free account, if you are affiliated with a university, I would also suggest applying for the education benefits here: <https://education.github.com/>. There are a few nice, but not mandatory, perks.

## Step 2: Configure Git in RStudio

Now, you need to tell Git a little bit about yourself on the computer/server you're using RStudio on.

::: {.callout-tip appearance="simple" icon="false"}
## {{< fa brands r-project >}}

Go To

:   Wherever you are using RStudio ( could be Posit Workbench, Posit Cloud, RStudio Server, or RStudio Desktop)

Then Go To

:   The Console (a.k.a the R Prompt)
:::

![The Console in RStudio is here.](github_onboarding_assets/rstudio_console.png){fig-alt="A screenshot of RStudio. The console is in its default pane on the left hand side. An arrow has been drawn onto the screenshot pointing at the" fig-align="center"}

Next, we need to tell the local version of Git who you are, specifically your username (which should match your Github username) and your email address (which should match the email address you registered for Github with).

::: {.callout-tip appearance="simple" icon="false"}
## {{< fa brands r-project >}}, {{< fa brands git >}}

In the code below, `USERNAME` should be replaced with your Github username and `EMAIL` should be replaced with the email you registered your github account with.

```{r}
#| filename: "Run this in the R Console:"
#| eval: false
system('git config --global user.name "USERNAME"')
system('git config --global user.email "EMAIL"')
```
:::

## Step 3: Configure RStudio to Communicate with Github

In order to be able to push commits from RStudio to Github, you'll need to set up secure communication between wherever you are using RStudio and Github. I'll walk you through how to do this with SSH credentials. (See also [Happy Git with R](https://happygitwithr.com/https-pat.html) for personal access tokens via HTTPS).

### RStudio Configuration

::: {.callout-tip appearance="simple" icon="false"}
## {{< fa brands r-project >}}

Go To:

:   The Tools menu, then Global Options

![](github_onboarding_assets/global_options.png){fig-alt="A screenshot of an RStudio session with Tools>Global Options selected" fig-align="center" width="76%"}

Then Go To:

:   Git/SVN from the left hand side option selector. Its icon is a cardboard box

![](github_onboarding_assets/git_svn.png){fig-alt="A screenshot of RStudio's global options menu, with Git/SVN selected" fig-align="center" width="75%"}

Then Go To

:   Create SSH Key

![](github_onboarding_assets/create_ssh_key.png){fig-alt="A screenshot of the RStudio Git/SVN options menu, with Create SSH Key selected" fig-align="center" width="75%"}

Then

:   The default options should be fine to use. The passphrase here is ***for the ssh key**.* It should [***not***]{.underline} be your Github password, or the password for logging into Posit Workbench or Posit Cloud. Once you're ready, click Create.

Then

:   After creating the SSH key, you should see the option "View Public Key". Click on it, and copy the text that appears.
:::

This concludes everything necessary on the RStudio side of things. You should probably keep the session open so that you can come back to re-copy your public key.

### Github Configuration

Now, you'll need to go over to github to add the public key to your profile.

::: {.callout-tip appearance="simple" icon="false"}
## {{< fa brands github >}}

Go To

:   Your Github Profile Settings

![](github_onboarding_assets/github_settings.png){fig-alt="Screenshot of a logged-in github session, with the user's profile setting selected" fig-align="center" width="75%"}

Then Go To

:   SSH and GPG keys from the left side menu

![](github_onboarding_assets/ssh_gpg.png){fig-alt="A screenshot of the github profile settings page with SSH and GPG keys selected" fig-align="center" width="75%"}

Then

:   Click on the New SSH key button

![](github_onboarding_assets/new_ssh_key.png){fig-alt="Screenshot of the Github SSH and GPG Keys settings, with New SSH Key selected" fig-align="center" width="75%"}

Then

:   Give this key an informative name so you can remember which computer it's coming from.

Then

:   Paste the text you copied from RStudio into the Key box and click Add SSH Key.
:::

## Configured

Now, wherever you are using RStudio from should be able to push commits to your Github account.
